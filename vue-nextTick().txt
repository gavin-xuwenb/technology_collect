nextTick 主要应用的场景及原因

场景1：在Vue生命周期的created()钩子函数进行的DOM操作一定要放在Vue.nextTick()的回调函数中

在created()钩子函数执行的时候 DOM 其实并未进行任何渲染,而此时进行DOM操作无异于徒劳

与之对应的就是mounted()钩子函数，因为该钩子函数执行时所有的DOM挂载和渲染都已完成，
此时在该钩子函数中进行任何DOM操作都不会有问题 。

场景2：当你设置vm.someData = 'new value'，该组件不会立即重新渲染
	  
	  但是如果你想在 DOM 状态更新后做点什么，这就可能会有些棘手，
	  
	  就是监测dom变化后再去做些什么，此时用 Vue.nextTick()。